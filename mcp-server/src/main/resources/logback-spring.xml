<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true">
    <!--获取springboot配置文件中配置的日志文件存放目录-->
    <springProperty scope="context" name="LOG_HOME" source="app.log.path" defaultValue="/var/logs"/>
    <springProperty scope="context" name="LOG_MAXHISTORY" source="app.log.MaxHistory" defaultValue="15"/>
    <springProperty scope="context" name="LOG_MAXFILESIZE" source="app.log.maxFileSize" defaultValue="10MB"/>
    <springProperty scope="context" name="LOG_TOTALSIZECAP" source="app.log.totalSizeCap" defaultValue="5GB"/>
    <!--获取springboot配置文件中配置的应用名称-->
    <springProperty scope="context" name="APP_NAME" source="spring.application.name"/>

    <conversionRule conversionWord="clr"
                    converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint}  %clr(${LOG_LEVEL_PATTERN:-%p})  ${APP_NAME}  %clr(%X{TRACE_ID})  [%thread]  %clr(%logger{36})  -  %m%n}"/>
    <!-- 控制台输出 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <!--此日志appender是为开发使用，只配置最低级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
    </appender>


    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/${APP_NAME}.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>${LOG_MAXHISTORY}</MaxHistory>
            <maxFileSize>${LOG_MAXFILESIZE}</maxFileSize>
            <totalSizeCap>${LOG_TOTALSIZECAP}</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出-->
            <pattern>${APP_NAME} ${hostname} %d{yyyy-MM-dd HH:mm:ss.SSS} %level %X{TRACE_ID} [%thread] %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <root level="DEBUG">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>

    <!--中间件的日志级别，可以根据实际需要调整-->
    <logger name="javax.activation" level="WARN"/>
    <logger name="javax.mail" level="WARN"/>
    <logger name="javax.xml.bind" level="WARN"/>
    <logger name="ch.qos.logback" level="WARN"/>
    <logger name="com.codahale.metrics" level="WARN"/>
    <logger name="com.ryantenney" level="WARN"/>
    <logger name="com.sun" level="WARN"/>
    <logger name="com.zaxxer" level="WARN"/>
    <logger name="io.undertow" level="WARN"/>
    <logger name="io.undertow.websockets.jsr" level="ERROR"/>
    <logger name="org.apache" level="WARN"/>
    <logger name="org.apache.catalina.startup.DigesterFactory" level="OFF"/>
    <logger name="org.bson" level="WARN"/>
    <logger name="org.hibernate.validator" level="WARN"/>
    <logger name="org.hibernate" level="WARN"/>
    <logger name="org.hibernate.ejb.HibernatePersistence" level="OFF"/>
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.springframework.web" level="INFO"/>
    <logger name="org.springframework.security" level="INFO"/>
    <logger name="org.springframework.cache" level="INFO"/>
    <logger name="org.thymeleaf" level="WARN"/>
    <logger name="org.xnio" level="WARN"/>
    <logger name="springfox" level="WARN"/>
    <logger name="sun.rmi" level="WARN"/>
    <logger name="liquibase" level="WARN"/>
    <logger name="LiquibaseSchemaResolver" level="INFO"/>
    <logger name="sun.rmi.transport" level="WARN"/>
    <logger name="com.netflix.turbine.monitor.cluster" level="INFO"/>
    <logger name="com.netflix.turbine.discovery" level="WARN"/>
    <logger name="org.reflections.Reflections" level="ERROR"/>
    <logger name="org.mybatis" level="WARN"/>

    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>
    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>

</configuration>
